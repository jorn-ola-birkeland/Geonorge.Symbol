@model Geonorge.Symbol.Models.Symbol
@section breadcrumb {
    <li><a href="~/files/index">Symbol</a></li>
    <li>Registrer symbol</li>
}
@{
    ViewBag.Title = "Symboler";
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                Registrer symbol
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.IsAdmin)
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-12">
                            <span class="required">Eierinformasjon til symbol – hvem leverer symbol</span>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select class="ownerOrganizationSelect form-control" id="Owner" name="Owner"> </select>
                            @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-md-12">
                        <span class="required">Informasjon om symbol-filen</span>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", cols = "", rows = "2", style = "min-height: 0;" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EksternalSymbolID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EksternalSymbolID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EksternalSymbolID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OfficialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            <input type="radio" name="OfficialStatus" value="True" /> Ja <input type="radio" name="OfficialStatus" value="False" /> Nei
                            @Html.ValidationMessageFor(model => model.OfficialStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Theme, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Theme", ViewBag.Themes as SelectList, String.Empty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Type", ViewBag.Types as SelectList, String.Empty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SymbolPackage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SymbolPackage", ViewBag.SymbolPackages as SelectList, String.Empty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SymbolPackage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SourceUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SourceUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SourceUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
                    <a class="hidden-print show-loading-animation pull-left" data-loading-message="Henter innhold" href="~/files/index">Tilbake</a>
                    <input type="submit" value="Lagre" style="margin-left: 15px;" class="btn btn-default pull-right" />

                </div>
            </div>
        </div>
     </div>
}
<script type="text/javascript" src="~/Scripts/custom.js"></script>
