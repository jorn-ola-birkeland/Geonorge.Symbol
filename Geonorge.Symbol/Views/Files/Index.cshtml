@model PagedList.IPagedList<Geonorge.Symbol.Models.Symbol>
@using PagedList.Mvc;
@section breadcrumb {
    <li>Symboler</li>
}
@{
    ViewBag.Title = "Symboler";
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                Symboler
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<div class="row">

    <div class="col-no-padding-xs col-xs-12 col-sm-10 col-md-10 col-lg-10">
        Dette registeret inneholder symboler som brukes til styling av digital kartografi 
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div id="tableView" class="search-results">
            <div class="row search-results-table-heading">
                <div class="col-sm-3"><p>@Html.ActionLink("Symbolnavn", "Index", new { sortOrder = ViewBag.SymbolnameSortParm, text = ViewBag.text }, new { @class = ViewBag.SortOrder.Contains("symbolname") ? (ViewBag.SymbolnameSortParm.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" })</p></div>
                <div class="col-sm-2"><p>@Html.ActionLink("Tema", "Index", new { sortOrder = ViewBag.Theme, text = ViewBag.text }, new { @class = ViewBag.SortOrder.Contains("theme") ? (ViewBag.Theme.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" })</p></div>
                <div class="col-sm-2"><p>@Html.ActionLink("Eier", "Index", new { sortOrder = ViewBag.Owner, text = ViewBag.text }, new { @class = ViewBag.SortOrder.Contains("owner") ? (ViewBag.Owner.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" })</p></div>
                <div class="col-sm-1"><p>Offisiell</p></div>
                <div class="col-sm-1"><p>Type</p></div>
                <div class="col-sm-2"><p>Kilde</p></div>
                <div class="col-sm-1"><p>Symbol</p></div>
            </div>


            <div class="menu-separator search-results-table-heading"></div>
            @foreach (var item in Model)
            {
                <div class="row result-row metadata">

                    <div class="col-sm-3">
                        @Html.ActionLink(item.Name ?? "->", "Files", new { SystemId = item.SystemId })
                    </div>
                    <div class="col-sm-2">
                        @Html.DisplayFor(modelItem => item.Theme)
                    </div>
                    <div class="col-sm-2">
                        @Html.DisplayFor(modelItem => item.Owner)
                    </div>
                    <div class="col-sm-1">
                        @Html.DisplayFor(modelItem => item.OfficialStatus)
                    </div>
                    <div class="col-sm-1">
                        @Html.DisplayFor(modelItem => item.Type)
                    </div>
                    <div class="col-sm-2">
                        @if (!string.IsNullOrEmpty(item.SourceUrl) && !string.IsNullOrEmpty(item.Source))
                        {
                            <a href="@item.SourceUrl" target="_blank">@item.Source</a>
                        }
                       
                    </div>
                    <div class="col-sm-1">
                        <img src="@item.ThumbnailUrl()" />
                    </div>
                </div>
                <hr />
            }
        </div>
        Side @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) av @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, text = ViewBag.text }))
    </div>
    <div class="clearfix"></div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
        <a class="hidden-print show-loading-animation pull-left" data-loading-message="Henter innhold" href="/">Tilbake</a>
        @if (Request.IsAuthenticated)
        {
            <a class="btn btn-default btn-space pull-right" href="~/symbol/Create">Registrer symbol</a>
        }

    </div>
</div>
